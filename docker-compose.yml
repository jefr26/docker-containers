version: '2'

services:

  traefik:
    image: traefik
    container_name: "${PROJECT}_traefik"
    command: --api --docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.${PROJECT_URL}'

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT}_mailhog"
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.${PROJECT_URL}'

  web:
    image: nginx:$NGINX_VERSION
    container_name: "${PROJECT}_web"
    environment:
      NGINX_HOST: $PROJECT_URL
      NGINX_SERVER_ROOT: /var/www/html
      NGINX_BACKEND_HOST: php
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
    volumes:
      - ./src:/var/www/html
      - ./docker-config/site.conf:/etc/nginx/conf.d/default.conf
    labels:
      - 'traefik.backend=web'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:${PROJECT_URL}'

  php:
    build: .
    container_name: "${PROJECT}_php"
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - ./src:/var/www/html

  mariadb:
    image: mariadb:$MARIADB_VERSION
    container_name: "${PROJECT}_mariadb"
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - ./mariadb_data:/var/lib/mysql

  # postgres:
  #   image: postgres:$POSTGRES_VERSION
  #   container_name: "${PROJECT}_postgres"
  #   enviroment:
  #     POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  #     POSTGRES_USER: $POSTGRES_USER
  #     POSTGRES_DB: $POSTGRES_DB
  #   volumes:
  #     - ./postgres_data:/var/lib/postgresql/data
